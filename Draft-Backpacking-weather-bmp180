#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP085_U.h> // Use the unified BMP085/BMP180 library
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define OLED_RESET    -1
Adafruit_SSD1306 display(128, 32, &Wire, OLED_RESET);
Adafruit_BMP085_Unified bmp = Adafruit_BMP085_Unified(10085);

void setup() {
  Serial.begin(115200);
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {  
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  display.display();
  delay(2000); // Pause for 2 seconds
  display.clearDisplay();

  if(!bmp.begin()) {
    Serial.print("Could not find a valid BMP085 sensor, check wiring!");
    while(1);
  }
}

void loop() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0,0);

  sensors_event_t event;
  bmp.getEvent(&event);

  if (event.pressure) {
    // The pressure sensor was successfully read.
    float temperature;
    bmp.getTemperature(&temperature); // Get the temperature in Celsius

    float seaLevelPressure = SENSORS_PRESSURE_SEALEVELHPA;
    float altitude = bmp.pressureToAltitude(seaLevelPressure, event.pressure);

    display.print("Temp: ");
    display.print(temperature);
    display.println(" *C");

    display.print("Pressure: ");
    display.print(event.pressure / 100.0);
    display.println(" hPa");

    display.print("Altitude: ");
    display.print(altitude);
    display.println(" m");

    // Implement your logic for calculating the chance of rain here
    // and display it similarly using display.print() and display.println()
  } else {
    display.println("Failed to read from BMP sensor!");
  }

  display.display();
  delay(5000); // Wait for 5 seconds before updating the data again
}
